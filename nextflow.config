/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/hybrider Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // TODO nf-core: Specify your pipeline's command line flags
    // Input and filtering options
    vcfs                     = "/data/home/lucas.freitas/nextflow_modules/nf-core-hybrider/test/samples.csv"
    // reads                    = "/data/home/lucas.freitas/nextflow_modules/nf-core-hybrider/test/raw_files.csv"
    meta                     = "/data/home/lucas.freitas/nextflow_modules/nf-core-hybrider/test/Metadata_SecondAssembly_f.txt"
    locmiss                  = 0.70 // Threshold for filtering out loci based on missingness (1==nomissing)
    indmiss                  = 0.30 // Threshold for filtering out individuals based on missingness (1==nomissing)
    maf                      = 0.05 // Threshold for filtering out loci based on Minor allele frequency
    popinfo                  = false // Whether or not use POP column from meta, this is used for various plotting and conversion functions
    outdir                   = "results"
    // reference                = []
    // datatype                 = "pairddrad"
    // assembly_method                   = "denovo"
    // overhang                 = "CATGC,AATT"
    // downstream               = false
    // upstream                 = true

    // Skips
    skip_filtering              = false
    skip_str                    = false
    skip_admix                  = false
    skip_plot                   = false
    skip_ml                     = false
    skip_vep                    = false

    // Structure parameters
    noadmix                  = false //wish to run with no admixture model?
    freqscorr                = true  // is the allele frequency correlated in your model?
    inferalpha               = true  // Do you wish to infer alpha value?
    alpha                    = 0.199 // Initial value of alpha if you wish to infer it from data.
    inferlambda              = false  // Do you wish to infer lambda from data?
    lambda                   = 1  // Generic value for lambda
    ploidy                   = 2  // Ploidy of the data
    burnin                   = 2000 // Burnin of MCMC algorithm chain
    mcmc                     = 20000 // Total length of MCMC algorithm chain
    rep_per_k                = 2 // Number of repetitions for each K value (usually 10)
    k_value                  = 1 // Number of Ks to test the data (usually 10)

    // Plot cluster parameters
    plot_admix               = true
    plot_str                 = true
    writecsv                 = true

    // Prepare data to ML parameters
    inferbypop               = false
    whichpop                 = "any"
    inferbyclust             = true // Do you wish to infer species by Q values?
    smaller                  = true // Do you wish to use smaller group to get allele frequency from
    method                   = "mean" // Either mean, str or admix to get ancestry coefficients from
    upper                    = 0.9 // Upper limit of Q value to define a putative species
    lower                    = 0.1 // Lower limit of Q value to define a putative species
    rminvariable             = true // Do you wish to remove invariable genotypes from the final matrix?
    dropna                   = true // Do you wish to drop all columns that contains any NA value?

    // Run ML snp selection
    kfold                    = 5 //N folds to perform cross-validation
    pvalue                   = 0.05 //P-value threshold for initial dimensionality reduction with chi2 test
    corr                     = 0.8 //Value of rÂ² threshold to filter variables highly correlated with each other, this will filter everything greater than threshold.
    nsnps                    = 30 //Number of SNPs to select.

    // Run VEP on filtered VCF
    gff                      = "/storages/caico/home/lucas.freitas/Mestrado_Files/GSC_monkey_1.0/GCF_009761245.1_GSC_monkey_1.0/GCF_009761245.1_GSC_monkey_1.0_genomic.gff"
    reference                = "/storages/caico/home/lucas.freitas/Mestrado_Files/GSC_monkey_1.0/GCF_009761245.1_GSC_monkey_1.0/GCF_009761245.1_GSC_monkey_1.0_genomic.fna"
    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                     = null
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false

    // Config options
    config_profile_name        = null
    config_profile_description = null
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null


    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

    // Schema validation default options
    validationFailUnrecognisedParams = false
    validationLenientMode            = false
    validationSchemaIgnoreParams     = 'genomes,igenomes_base'
    validationShowHiddenParams       = false
    validate_params                  = true

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/hybrider custom profiles from different institutions.
// Warning: Uncomment only if a pipeline-specific instititutional config already exists on nf-core/configs!
// try {
//   includeConfig "${params.custom_config_base}/pipeline/hybrider.config"
// } catch (Exception e) {
//   System.err.println("WARNING: Could not load nf-core/config/hybrider profiles: ${params.custom_config_base}/pipeline/hybrider.config")
// }
profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    docker {
        docker.enabled         = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
        docker.runOptions      = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions      = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled         = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    shifter {
        shifter.enabled        = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    charliecloud {
        charliecloud.enabled   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        apptainer.enabled      = false
    }
    apptainer {
        apptainer.enabled      = true
        apptainer.autoMounts   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 4
        executor.memory        = 8.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Set default registry for Apptainer, Docker, Podman and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry   = 'quay.io'
docker.registry      = 'quay.io'
podman.registry      = 'quay.io'
singularity.registry = 'quay.io'

// Nextflow plugins
plugins {
    id 'nf-validation@1.1.3' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}


// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'lfreitasl/hybrider'
    author          = """Lucas de Freitas Lacerda"""
    homePage        = 'https://github.com/lfreitasl/hybrider'
    description     = """This a pipeline to analyse ddRADseq data based on VCF files generated from assembly steps"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.0dev'
    doi             = ''
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
